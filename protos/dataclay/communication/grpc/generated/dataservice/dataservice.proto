syntax = "proto3";
package dataclay.communication.grpc.dataservice;
import "dataclay/communication/grpc/messages/dataservice/dataservice_messages.proto";
import "dataclay/communication/grpc/messages/common/common_messages.proto";
option java_package = "dataclay.communication.grpc.generated.dataservice";
option java_outer_classname="DataServiceGrpcService";

// Interface exported by the server.
service DataService {

	// Deployment
	rpc initBackendID(InitBackendIDRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc associateExecutionEnvironment(AssociateExecutionEnvironmentRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc deployMetaClasses(DeployMetaClassesRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc deployClasses(DeployClassesRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc enrichClass(EnrichClassRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}

	// Execution Environment
	rpc newPersistentInstance(NewPersistentInstanceRequest) returns (NewPersistentInstanceResponse) {}
	rpc storeObjects(StoreObjectsRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc getCopyOfObject(GetCopyOfObjectRequest) returns (GetCopyOfObjectResponse) {}
	rpc updateObject(UpdateObjectRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc getObjects(GetObjectsRequest) returns (GetObjectsResponse) {}
	
	rpc newMetaData(NewMetaDataRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc newVersion(NewVersionRequest) returns (NewVersionResponse) {}
	rpc consolidateVersion(ConsolidateVersionRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc upsertObjects(UpsertObjectsRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc newReplica(NewReplicaRequest) returns (NewReplicaResponse) {}
	rpc moveObjects(MoveObjectsRequest) returns (MoveObjectsResponse) {}
	rpc removeObjects(RemoveObjectsRequest) returns (RemoveObjectsResponse) {}
	rpc migrateObjectsToBackends(MigrateObjectsRequest) returns (MigrateObjectsResponse) {}
	rpc getClassIDFromObjectInMemory(GetClassIDFromObjectInMemoryRequest) returns (GetClassIDFromObjectInMemoryResponse) {}
	rpc executeImplementation(ExecuteImplementationRequest) returns (ExecuteImplementationResponse) {}
	rpc makePersistent(MakePersistentRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc federate(FederateRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc unfederate(UnfederateRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc exists(ExistsRequest) returns (ExistsResponse) {}
	
	// Federation
	rpc getFederatedObjects(GetFederatedObjectsRequest) returns (GetFederatedObjectsResponse) {}
	rpc getReferencedObjectsIDs(GetReferencedObjectIDsRequest) returns (GetReferencedObjectIDsResponse) {}
	
	// Filtering
	rpc filterObject(FilterObjectRequest) returns (FilterObjectResponse) {}
	
	// Storage Location
	rpc storeToDB(StoreToDBRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc getFromDB(GetFromDBRequest) returns (GetFromDBResponse){}
	rpc updateToDB(UpdateToDBRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc deleteToDB(DeleteToDBRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {} 
 	rpc existsInDB(ExistsInDBRequest) returns (ExistsInDBResponse) {}

	// Others
	rpc cleanExecutionClassDirectory(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc closeDbHandler(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc shutDown(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc disconnectFromOthers(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc registerPendingObjects(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}

	// Paraver
	rpc cleanCaches(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc activateTracing(ActivateTracingRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc deactivateTracing(communication.grpc.common.EmptyMessage) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
	rpc getTraces(communication.grpc.common.EmptyMessage) returns (communication.grpc.common.GetTracesResponse) {}

	// Garbage collection
	rpc closeSessionInDS(CloseSessionInDSRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
 	rpc updateRefs(UpdateRefsRequest) returns (dataclay.communication.grpc.common.ExceptionInfo) {}
 	rpc getRetainedReferences(communication.grpc.common.EmptyMessage) returns (GetRetainedReferencesResponse) {}

}
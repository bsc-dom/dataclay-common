syntax = "proto3";
package dataclay.communication.grpc.dataservice;
import "dataclay/communication/grpc/messages/common/common_messages.proto";
option java_package = "es.bsc.dataclay.communication.grpc.messages.dataservice";
option java_multiple_files = false;

message InitBackendIDRequest {
	string backendID = 1;
}

message AssociateExecutionEnvironmentRequest { 
	string executionEnvironmentID = 1;
}

message DeployMetaClassesRequest {
	string namespace = 1;
	map<string, string> deploymentPack = 2;
}

message DeployClassesRequest {
	string namespace = 1;
	map<string, bytes> classesToDeploy = 2;
	map<string, string> classIds = 3;
	map<string, bytes> aspects = 4;
	map<string, bytes> yamls = 5;
}

message EnrichClassRequest {
	string namespace = 1;
	string classname = 2;
	bytes classToDeploy = 3;
	bytes aspect = 4;
	bytes yaml = 5;

}

message NewPersistentInstanceRequest {
	string sessionID = 1;
	string classID = 2;
	string implementationID = 3;
	map<string, bytes> ifaceBitMaps = 4;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 5;
}

message NewPersistentInstanceResponse {
	string objectID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message StoreObjectsRequest {
	string sessionID = 1;
	repeated dataclay.communication.grpc.common.ObjectWithDataParamOrReturn objects = 2;
	bool moving = 3;
	repeated string idsWithAlias = 4;
}

message GetCopyOfObjectRequest {
    string sessionID = 1;
    string objectID = 2;
    bool recursive = 3;
}

message GetCopyOfObjectResponse {
	dataclay.communication.grpc.common.SerializedParametersOrReturn ret = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message UpdateObjectRequest {
    string sessionID = 1;
    string intoObjectID = 2;
    dataclay.communication.grpc.common.SerializedParametersOrReturn fromObject = 3;
}

message GetObjectsRequest {
	string sessionID = 1;
	repeated string objectIDS = 2;
	bool recursive = 3;
	string destBackendID = 4;
}

message GetObjectsResponse {
	repeated dataclay.communication.grpc.common.ObjectWithDataParamOrReturn objects = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message MakePersistentRequest { 
	string sessionID = 1;
	repeated dataclay.communication.grpc.common.ObjectWithDataParamOrReturn objects = 2;
}

message FederateRequest {
	string sessionID = 1;
	string objectID = 2;
	string externalExecutionEnvironmentID = 3;
	bool recursive = 4;
}

message NotifyFederationRequest {
	string sessionID = 1;
	repeated dataclay.communication.grpc.common.ObjectWithDataParamOrReturn objects = 2;
}

message UnfederateRequest {
	string sessionID = 1;
	string objectID = 2;
	string externalExecutionEnvironmentID = 3;
	bool recursive = 4;
}

message NotifyUnfederationRequest {
	string sessionID = 1;
	repeated string objectIDs = 2;
}

message ExecuteImplementationRequest {
	string objectID = 1;
	string implementationID = 2;
	string sessionID = 3;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 4;

}

message ExecuteImplementationResponse {
	dataclay.communication.grpc.common.SerializedParametersOrReturn ret = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewVersionRequest {
	string sessionID = 1;
	string objectID = 2;
	string destBackendID = 3;
}

message NewVersionResponse {
	string objectID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ConsolidateVersionRequest {
	string sessionID = 1;
	string versionObjectID = 2;
}

message UpsertObjectsRequest {
	string sessionID = 1;
	repeated dataclay.communication.grpc.common.ObjectWithDataParamOrReturn bytesUpdate = 2;
}

message NewReplicaRequest {
	string sessionID = 1;
	string objectID = 2;
	string destBackendID = 3;
	bool recursive = 4;
}

message NewReplicaResponse {
	repeated string replicatedObjects = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message MoveObjectsRequest {
	string sessionID = 1;
	string objectID = 2;
	string destLocID = 3;
	bool recursive = 4;
}

message MoveObjectsResponse {
	repeated string movedObjects = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RemoveObjectsRequest {
	string sessionID = 1;
	repeated string objectIDs = 2;
	bool recursive = 3;
	bool moving = 4;
	string newHint = 5;
}

message RemoveObjectsResponse {
	map<string, string> removedObjects = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message MigrateObjectsRequest {
	map<string, dataclay.communication.grpc.common.StorageLocationInfo> destStorageLocs = 1;
}

message MigratedObjects {
	repeated string objs = 1;
}

message MigrateObjectsResponse {
	map<string, MigratedObjects> migratedObjs = 1;
	MigratedObjects nonMigratedObjs = 2;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 3;
}

message ActivateTracingRequest {
	int32 taskid = 1;
}

message CloseSessionInDSRequest {
	string sessionID = 1;
}

message DiskCollectRequest {
	string epochNodeID = 1;
	repeated string ringPath = 2;
	repeated string candidates = 3;
	map<string, int32> refsToUpdate = 4;
}

message GetClassIDFromObjectInMemoryRequest {
	string objectID = 1;
}

message GetClassIDFromObjectInMemoryResponse {
	string classID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message StoreToDBRequest {
	string executionEnvironmentID = 1;
	string objectID = 2;
	bytes objBytes = 3;
}

message GetFromDBRequest {
	string executionEnvironmentID = 1;
	string objectID = 2;
}

message GetFromDBResponse {
	bytes objBytes = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message UpdateToDBRequest {
	string executionEnvironmentID = 1;
	string objectID = 2;
	bytes objBytes = 3;
	bool dirty = 4;
}

message DeleteToDBRequest {
	string executionEnvironmentID = 1;
	string objectID = 2;
}

message UpdateRefsRequest {
	map<string, int32> refsToUpdate = 1;
}

message GetRetainedReferencesResponse {
	repeated string retainedReferences = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message SynchronizeRequest {
	string objectID = 1;
	string implementationID = 2;
	string sessionID = 3;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 4;
	string callingBackendID = 5;
}

message ExistsRequest { 
	string objectID = 1;
}

message ExistsResponse { 
	bool exists = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ExistsInDBRequest { 
	string objectID = 1;
}

message ExistsInDBResponse { 
	bool exists = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

syntax = "proto3";
package dataclay.communication.grpc.logicmodule;
import "dataclay/communication/grpc/messages/common/common_messages.proto";
option java_package = "dataclay.communication.grpc.messages.logicmodule";
option java_multiple_files = false;

message NewAccountNoAdminRequest {
	string yamlNewAccount = 1;
}

message NewAccountRequest {
	dataclay.communication.grpc.common.AccountID adminID = 1;
	dataclay.communication.grpc.common.Credential admincredential = 2;
	string yamlNewAccount = 3;
}

message NewAccountResponse {
	dataclay.communication.grpc.common.AccountID newAccountID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message PublishAddressRequest { 
	string hostname = 1;
	int32 port = 2;
}

message GetAccountIDRequest {
	string accountName = 1;
}

message GetAccountIDResponse {
	dataclay.communication.grpc.common.AccountID newAccountID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message AutoRegisterSLRequest {
	dataclay.communication.grpc.common.StorageLocationID storageLocationID = 1;
	string dsName = 2;
	string dsHostname = 3;
	int32 dsPort = 4;
}


message AutoRegisterEERequest {
	dataclay.communication.grpc.common.ExecutionEnvironmentID executionEnvironmentID = 1;
	string eeName = 2;
	string eeHostname = 3;
	int32 eePort = 4;
	dataclay.communication.grpc.common.Langs lang = 5;
}

message AutoRegisterEEResponse {
	dataclay.communication.grpc.common.StorageLocationID storageLocationID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message UnregisterStorageLocationRequest {
	dataclay.communication.grpc.common.StorageLocationID storageLocationID = 1;
}

message UnregisterExecutionEnvironmentRequest {
	dataclay.communication.grpc.common.ExecutionEnvironmentID executionEnvironmentID = 1;
}

message PerformSetAccountsRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string yaml = 3;
}

message PerformSetAccountsResponse {
	string resultYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message PerformSetOperationsRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string yaml = 3;
}

message PerformSetOperationsResponse {
	string resultYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetAccountListRequest {
	dataclay.communication.grpc.common.AccountID adminID = 1;
	dataclay.communication.grpc.common.Credential admincredential = 2;
}

message GetAccountListResponse {
	repeated string accountIDs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewSessionRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	repeated dataclay.communication.grpc.common.ContractID contractIDs = 3;
	repeated dataclay.communication.grpc.common.DataSetID dataSetIDs = 4;
	dataclay.communication.grpc.common.DataSetID storeDataSet = 5;
	dataclay.communication.grpc.common.Langs sessionLang = 6;
}

message NewSessionResponse {
	string sessionInfo = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetInfoOfSessionForDSRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
}

message GetInfoOfSessionForDSResponse {
	dataclay.communication.grpc.common.DataSetID dataSetID = 1;
	int64 date = 2;
	repeated dataclay.communication.grpc.common.DataSetID dataSetIDs = 3;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 4;
}

message NewNamespaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string newNamespaceYaml = 3;
}

message NewNamespaceResponse {
	dataclay.communication.grpc.common.NamespaceID namespaceID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetNamespacesRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
}

message GetNamespacesResponse {
	repeated string namespaces = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RemoveNamespaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string namespaceName = 3;
}

message GetNamespaceIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string namespaceName = 3;
}

message GetNamespaceIDResponse {
	dataclay.communication.grpc.common.NamespaceID namespaceID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetNamespaceLangRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string namespaceName = 3;
}

message GetNamespaceLangResponse {
	dataclay.communication.grpc.common.Langs language = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetObjectDataSetIDRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
}

message GetObjectDataSetIDResponse {
	dataclay.communication.grpc.common.DataSetID dataSetID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ImportInterfaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	dataclay.communication.grpc.common.ContractID contractID = 4;
	dataclay.communication.grpc.common.InterfaceID interfaceID = 5;
}


message ImportContractRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	dataclay.communication.grpc.common.ContractID contractID = 4;
}

message NewDataSetRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string dataSetYaml = 3;
}

message NewDataSetResponse {
	dataclay.communication.grpc.common.DataSetID dataSetID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RemoveDataSetRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string dataSetName = 3;
}

message GetDataSetIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string dataSetName = 3;
}

message GetDataSetIDResponse {
	dataclay.communication.grpc.common.DataSetID dataSetID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetPublicDataSetsRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
}

message GetPublicDataSetsResponse {
	repeated string dataSets = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetAccountDataSetsRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
}

message GetAccountDataSetsResponse {
	repeated string dataSets = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}


message CheckDataSetIsPublicRequest {
	dataclay.communication.grpc.common.DataSetID dataSetID = 1;
}

message CheckDataSetIsPublicResponse {
	bool isPublic = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewClassRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.Langs language = 3;
	map<string, string> newClasses = 4;
}

message NewClassResponse {
	map<string, string> newClasses = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewClassIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.Langs language = 3;
	string className = 4;
	map<string, string> newClasses = 5;
}


message NewClassIDResponse {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RemoveClassRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
}

message RemoveOperationRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
	string operationNameAndSignature = 5;
}

message RemoveImplementationRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
	dataclay.communication.grpc.common.ImplementationID implementationID = 5;
}

message GetOperationIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
	string operationNameAndSignature = 5;
}

message GetOperationIDResponse {
	dataclay.communication.grpc.common.OperationID operationID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetPropertyIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
	string propertyName = 5;
}

message GetPropertyIDResponse {
	dataclay.communication.grpc.common.PropertyID propertyID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetClassIDRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
}

message GetClassIDResponse {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetClassInfoRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
}

message GetClassInfoResponse {
	string metaClassYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetInfoOfClassesInNamespaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
}

message GetInfoOfClassesInNamespaceResponse {
	map<string, string> classesInfo = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetImportedClassesInfoInNamespaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
}

message GetImportedClassesInfoInNamespaceResponse {
	map<string, string> importedClasses = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetClassIDFromImportRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	string className = 4;
}

message GetClassIDFromImportResponse {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewContractRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string newContractYaml = 3;
}

message NewContractResponse {
	dataclay.communication.grpc.common.ContractID contractID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RegisterToPublicContractRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.ContractID contractID = 3;
}

message RegisterToPublicContractOfNamespaceRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
}

message RegisterToPublicContractOfNamespaceResponse {
	dataclay.communication.grpc.common.ContractID contractID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetContractIDsOfApplicantRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
}

message GetContractIDsOfApplicantResponse {
	map<string,string> contracts = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetContractIDsOfProviderRequest {
	dataclay.communication.grpc.common.AccountID providerID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceIDOfProvider = 3;
}

message GetContractIDsOfProviderResponse {
	map<string,string> contracts = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetContractsOfApplicantWithProvRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceIDOfProvider = 3;
}

message GetContractsOfApplicantWithProvResponse {
	map<string,string> contracts = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewDataContractRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string dataContractYaml = 3;
}

message NewDataContractResponse {
	dataclay.communication.grpc.common.DataContractID dataContractID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RegisterToPublicDataContractRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.DataContractID dataContractID = 3;
}

message GetDataContractIDsOfApplicantRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
}

message GetDataContractIDsOfApplicantResponse {
	map<string,string> datacontracts = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetDataContractIDsOfProviderRequest {
	dataclay.communication.grpc.common.AccountID providerID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.DataSetID dataSetIDOfProvider = 3;
}

message GetDataContractIDsOfProviderResponse {
	map<string,string> datacontracts = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetDataContractInfoOfApplicantWithProvRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.DataSetID dataSetIDOfProvider = 3;
}

message GetDataContractInfoOfApplicantWithProvResponse {
	string dataContractInfo = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NewInterfaceRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	string interfaceYaml = 3;
}

message NewInterfaceResponse {
	dataclay.communication.grpc.common.InterfaceID interfaceID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetInterfaceInfoRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.InterfaceID interfaceID = 3;
}

message GetInterfaceInfoResponse {
	string interfaceYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RemoveInterfaceRequest {
	dataclay.communication.grpc.common.AccountID applicantID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.NamespaceID namespaceID = 3;
	dataclay.communication.grpc.common.InterfaceID interfaceID = 4;
}

message GetStorageLocationForDSRequest {
	dataclay.communication.grpc.common.StorageLocationID storageLocationID = 1;
}

message GetStorageLocationForDSResponse {
	string storageLocationYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetExecutionEnvironmentForDSRequest {
	dataclay.communication.grpc.common.ExecutionEnvironmentID execEnvID = 1;
}

message GetExecutionEnvironmentForDSResponse {
	string execEnvYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetDataClayIDResponse {
	dataclay.communication.grpc.common.DataClayInstanceID dataClayID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message RegisterExternalDataClayRequest {
	string hostname = 1;
	int32 port = 2;
}

message RegisterExternalDataClayOverrideAuthorityRequest {
	dataclay.communication.grpc.common.AccountID adminAccountID = 1;
	dataclay.communication.grpc.common.Credential adminCredential = 2;
	string hostname = 3;
	int32 port = 4;
	string authority = 5;
}

message RegisterExternalDataClayResponse {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message NotifyRegistrationOfExternalDataClayRequest { 
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	string hostname = 2;
	int32 port = 3;
}

message NotifyRegistrationOfExternalDataClayResponse {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}


message GetExternalDataclayIDRequest {
	string host = 1;
	int32 port = 2;
}

message GetExternalDataclayIDResponse {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetExtDataClayInfoRequest {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
}

message GetExtDataClayInfoResponse {
	string extDataClayYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message FederateObjectRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 3;
	bool recursive = 4;
}

message UnfederateObjectRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 3;
	bool recursive = 4;
}

message UnfederateObjectWithAllDCsRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	bool recursive = 3;
}

message MigrateFederatedObjectsRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.DataClayInstanceID externalOriginDataClayID = 2;
	dataclay.communication.grpc.common.DataClayInstanceID externalDestinationDataClayID = 3;
}

message FederateAllObjectsRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.DataClayInstanceID externalDestinationDataClayID = 3;
}

message UnfederateAllObjectsRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 2;
}


message UnfederateAllObjectsWithAllDCsRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
}

message NotifyFederatedObjectsRequest {
	dataclay.communication.grpc.common.DataClayInstanceID srcDcID = 1;
	string srcDcHost = 2;
	int32 srcDcPort = 3;
	map<string, string> objectsInfo = 4;
	map<string, dataclay.communication.grpc.common.SerializedParametersOrReturn> federatedObjects = 5;
}

message NotifyUnfederatedObjectsRequest {
	dataclay.communication.grpc.common.DataClayInstanceID srcDcID = 1;
	repeated dataclay.communication.grpc.common.ObjectID objectsIDs = 2;
}

message CheckObjectFederatedWithDataClayInstanceRequest {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 2;
}

message CheckObjectFederatedWithDataClayInstanceResponse {
	bool isFederated = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message CheckObjectFederatedRequest {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
}

message CheckObjectFederatedResponse {
	bool isFederated = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetDataClaysObjectIsFederatedWithRequest {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
}

message GetDataClaysObjectIsFederatedWithResponse {
	repeated dataclay.communication.grpc.common.DataClayInstanceID extDataClayIDs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetExternalSourceDataClayOfObjectRequest {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
}

message GetExternalSourceDataClayOfObjectResponse {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}
	
message RegisterObjectForGCRequest {
	dataclay.communication.grpc.common.RegistrationInfo regInfo = 1;
	dataclay.communication.grpc.common.ExecutionEnvironmentID backendID = 2;
}

message RegisterObjectRequest {
	dataclay.communication.grpc.common.RegistrationInfo regInfo = 1;
	dataclay.communication.grpc.common.ExecutionEnvironmentID backendID = 2;
	string alias = 3;
	dataclay.communication.grpc.common.Langs lang = 4;

}

message GetExecutionEnvironmentsInfoRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.Langs execEnvLang = 2;
	bool fromClient = 3;
}

message GetExecutionEnvironmentsInfoResponse {
	map<string, string> execEnvs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetExecutionEnvironmentsNamesRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credential = 2;
	dataclay.communication.grpc.common.Langs execEnvLang = 3;
}

message GetExecutionEnvironmentsNamesResponse {
	repeated string execEnvs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetObjectInfoRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
}

message GetObjectInfoResponse {
	string classname = 1;
	string namespace = 2;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 3;
}

message GetObjectFromAliasRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	string alias = 2;
}

message GetObjectFromAliasResponse {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
	dataclay.communication.grpc.common.MetaClassID classID = 2;
	dataclay.communication.grpc.common.ExecutionEnvironmentID hint = 3;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 4;
}

message AddAliasRequest{
	dataclay.communication.grpc.common.ObjectID objectIDToHaveAlias = 1;
	string alias = 2;
}

message DeleteAliasRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	string alias = 2;
}

message GetObjectsMetaDataInfoOfClassForNMRequest {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
}

message GetObjectsMetaDataInfoOfClassForNMResponse {
	map<string, string> mdataInfo = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message SetDataSetIDRequest { 
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.DataSetID datasetID = 3;
}

message SetDataSetIDFromGarbageCollectorRequest { 
	dataclay.communication.grpc.common.ObjectID objectID = 1;
	dataclay.communication.grpc.common.DataSetID datasetID = 2;
}

message NewVersionRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.ExecutionEnvironmentID optDestBackendID = 3;
}

message NewVersionResponse {
	string versionInfoYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ConsolidateVersionRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	string versionInfoYaml = 2;
}

message NewReplicaRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.ExecutionEnvironmentID destBackendID = 3;
	bool recursive = 4;
}

message NewReplicaResponse {
	dataclay.communication.grpc.common.ExecutionEnvironmentID destBackendID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message MoveObjectRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.ExecutionEnvironmentID srcBackendID = 3;
	dataclay.communication.grpc.common.ExecutionEnvironmentID destBackendID = 4;
	bool recursive = 5;
}

message MoveObjectResponse {
	repeated dataclay.communication.grpc.common.ObjectID objectIDs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message SetObjectReadOnlyRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
}

message SetObjectReadWriteRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
}

message GetMetadataByOIDRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
}

message GetMetadataByOIDResponse {
	string objMdataYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetMetadataByOIDForDSRequest {
	dataclay.communication.grpc.common.ObjectID objectID = 1;
}

message GetMetadataByOIDForDSResponse {
	string objMdataYaml = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ExecuteImplementationRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.OperationID operationID = 2;
	dataclay.communication.grpc.common.ImplementationID implementationID = 3;
	dataclay.communication.grpc.common.ContractID contractID = 4;
	dataclay.communication.grpc.common.InterfaceID interfaceID = 5;
	dataclay.communication.grpc.common.ObjectID objectID = 6;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 7;
}

message ExecuteImplementationResponse {
	dataclay.communication.grpc.common.SerializedParametersOrReturn ret = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ExecuteMethodOnTargetRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	string operationNameAndSignature = 3;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 4;
	dataclay.communication.grpc.common.ExecutionEnvironmentID targetBackendID = 5;
}

message ExecuteMethodOnTargetResponse {
	dataclay.communication.grpc.common.SerializedParametersOrReturn ret = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message SynchronizeFederatedObjectRequest {
	dataclay.communication.grpc.common.DataClayInstanceID extDataClayID = 1;
	dataclay.communication.grpc.common.ObjectID objectID = 2;
	dataclay.communication.grpc.common.ImplementationID implementationID = 3;
	dataclay.communication.grpc.common.SerializedParametersOrReturn params = 4;
	bool allBackends = 5;
}

message GetStubsRequest {
	dataclay.communication.grpc.common.AccountID applicantAccountID = 1;
	dataclay.communication.grpc.common.Credential credentials = 2;
	dataclay.communication.grpc.common.Langs language = 3;
	repeated dataclay.communication.grpc.common.ContractID contractIDs = 4;
}

message GetStubsResponse {
	map<string, bytes> stubs = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetBabelStubsRequest {
	dataclay.communication.grpc.common.AccountID accountID = 1;
	dataclay.communication.grpc.common.Credential credentials = 2;
	repeated dataclay.communication.grpc.common.ContractID contractIDs = 4;
}

message GetBabelStubsResponse {
	bytes yamlStub = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetClassNameForDSRequest {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
}

message GetClassNameForDSResponse {
	string className = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message GetClassNameAndNamespaceForDSRequest {
	dataclay.communication.grpc.common.MetaClassID classID = 1;
}

message GetClassNameAndNamespaceForDSResponse {
	string className = 1;
	string namespace = 2;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 3;
}

message RegisterECARequest {
	dataclay.communication.grpc.common.AccountID applicantAccountID = 1;
	dataclay.communication.grpc.common.Credential credentials = 2;
	string eca = 3;
}

message AdviseEventRequest {
	string eventYaml = 1;
}

message GetContractIDOfDataClayProviderRequest {
	dataclay.communication.grpc.common.AccountID applicantAccountID = 1;
	dataclay.communication.grpc.common.Credential credentials = 2;
}

message GetContractIDOfDataClayProviderResponse {
	dataclay.communication.grpc.common.ContractID contractID = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ActivateTracingRequest {
	int32 taskid = 1;
}

message CloseSessionRequest {
	dataclay.communication.grpc.common.SessionID sessionID = 1;
}

message UnregisterObjectsRequest { 
	repeated dataclay.communication.grpc.common.ObjectID objectsToUnregister = 1;
	
}

message IsPrefetchingEnabledResponse { 
	bool enabled = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}

message ObjectExistsInDataClayRequest { 
	dataclay.communication.grpc.common.ObjectID objectID = 1;
}

message ObjectExistsInDataClayResponse { 
	bool exists = 1;
	dataclay.communication.grpc.common.ExceptionInfo excInfo = 2;
}
